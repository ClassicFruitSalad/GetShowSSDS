<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>Get API SSD</action_name>
        <active>false</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments/>
        <condition/>
        <form_action>true</form_action>
        <form_button>true</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <name>Get API SSD</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[//gs.addInfoMessage(parsed.publisher); - great for debugging

try {
    var request = new sn_ws.RESTMessageV2('x_276844_ssd_looku.SLiM SSDs', 'Get SSD');
    request.setStringParameterNoEscape('ssd', '1');
    var response = request.execute();
    var httpResponseStatus = response.getStatusCode();
    var httpResponseContentType = response.getHeader('Content-Type');  
    var parsed = {};
    var httpResponseBody;

    //  if request is successful then parse the response body
    if (httpResponseStatus == 200 && httpResponseContentType == 'application/json; charset=utf-8') {																
        httpResponseBody = response.getBody();
        
        //  parse JSON string returned from request into json object    
        parsed = JSON.parse(httpResponseBody);	      
     
		var gr = new GlideRecord('x_276844_get_and_s_ssds');
        gr.initialize(); 
        gr.publisher =  parsed.publisher;
        gr.application =  parsed.application;
        gr.version =  parsed.version;
        gr.insert();
    }
}
catch (ex) {
    gs.addErrorMessage('Something went wrong.');
    var message = ex.message;
}]]></script>
        <show_insert>true</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-06-10 16:09:56</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>50315f44db423300164886323996197d</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>Get API SSD</sys_name>
        <sys_overrides/>
        <sys_package display_value="Get and Show SSDs v1" source="x_276844_get_and_s">57fc8340db42330016488632399619aa</sys_package>
        <sys_policy/>
        <sys_scope display_value="Get and Show SSDs v1">57fc8340db42330016488632399619aa</sys_scope>
        <sys_update_name>sys_ui_action_50315f44db423300164886323996197d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-06-12 10:08:56</sys_updated_on>
        <table>x_276844_get_and_s_ssds</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
